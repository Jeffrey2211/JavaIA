import Mare.Delfini;
import Nuoto.Nuotatore;
import Terra.Uomo;

/*
		 * SPESSO NELLA PROGETTAZIONE DI UN SOFTWARE
		 * SI TENDE A CREARE DELLE SUPERCLASSI E AD ESTENDERLE.
		 * QUANDO IL PROGRAMMA � UN P� PI� COMPLESSO
		 * PU� SUCCEDERE DI DOVER CREARE DIVERSE SUPERCLASSI E DI DOVERLE
		 * ESTENDERE. SUCCEDE PER� A VOLTE CHE SI DEBBANO
		 * METTERE IN RELAZIONE O NELLO STESSO INSIEME OGGETTI
		 * DERIVANTI DA SUPERCLASSI DIVERSE,MA CHE HANNO DEGLI ELEMENTI
		 * IN COMUNE
		 * IN QUESTI CASI � POSSIBILE USARE LE INTERFACCE
		 * QUESTE OFFRONO UNA MODALIT� A VALLE PER POTER UNIRE IN UN INSIEME
		 * ELEMENTI ETEROGENEI (PROVENIENTI DA DIVERSE SUPERCLASSI)
		 * CHE PER� HANNO METODI IN COMUNE 
		 */
		
		/*
		 * AD ESEMPIO
		 * SUPERCLASSE ANIMALI -> AQUILE, UOMINI, LEONI
		 * SUPERCLASSE PESCI - > DELFINI, GAMBERI
		 * 
		 * NUOTATORI - > UOMINI, DELFINI
		 */

/*
 * PER RAGGRUPPARE QUESTI OGGETTI CON CARATTERISTICHE COMUNI
 * POSSO CREARE UNA INTERFACCIA
 * L'INTERFACCIA � UN CLASSE CHE CONTIENE SOLO METODI ASTRATTI
 * UNA CLASSE CHE VUOLE IMPLEMENTARE L'INTERFACCIA
 * DEVE CONTENERE TUTTI IMETODI ASTRATTI DELL'INTERFACCIA
 */

public class ProgettaAffinita {

	public static void main(String[] args) {
		

		Nuotatore[] elenconuotatori = new Nuotatore[2];
		
		elenconuotatori[0] = new Delfini("Willy", 5, 3000, "Delphinium");
		elenconuotatori[1] = new Uomo("Nicola", 4, false, 178);
		
		for (int i = 0; i < elenconuotatori.length; i++) {
			
			elenconuotatori[i].nuotare();
			
		}
		
		
		
		

	}

}
